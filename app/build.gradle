plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    /*para pasar argumentos entre fragmentos, aunque no vayamos a pasar*/
    id 'androidx.navigation.safeargs'
    /*injección de dependencias*/
    id("com.google.dagger.hilt.android")
}

android {
    namespace 'com.dessoft.dogs'
    compileSdk 33

    defaultConfig {
        applicationId "com.dessoft.dogs"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    /*implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"*/
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.1"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    /*para utilizar viewModelScope al actualizar da problemas, creo que pide actualizacion de IDE*/
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'

    /*esto es para utilizar el by viewModels()*/
    implementation 'androidx.activity:activity-ktx:1.6.1'

    /*Retrofit y moshi*/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    /*Navegar entre fragment*/
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    /*Coil es el unico que da soporte para jetpack compose*/
    implementation 'io.coil-kt:coil:1.4.0'

    /*camera
    * https://developer.android.com/training/camerax/architecture*/
    implementation 'androidx.camera:camera-camera2:1.2.2'
    implementation 'androidx.camera:camera-lifecycle:1.2.2'
    implementation 'androidx.camera:camera-view:1.2.2'

    /*TensorFlow lite (Machine learning)*/
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly-SNAPSHOT'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'

    /*Jetpack Compose*/
    /*def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'*/

    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui:1.4.1'

    /*// Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'*/
    implementation 'androidx.compose.ui:ui-tooling:1.4.1'

    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation:1.4.1'

    // or Material Design 2
    implementation 'androidx.compose.material:material:1.4.1'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core:1.4.1'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended:1.4.1'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.0'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.4.1'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    /*debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'*/

    /*Coil compose*/
    implementation 'io.coil-kt:coil-compose:1.3.1'

    /*navigation Compose*/
    implementation 'androidx.navigation:navigation-compose:2.5.3'

    /*Injección de dependencias*/
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}